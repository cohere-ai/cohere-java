/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.cohere.api.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;
import java.util.Optional;

public final class StreamedChatResponseV2 {
    private final Value value;

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    private StreamedChatResponseV2(Value value) {
        this.value = value;
    }

    public <T> T visit(Visitor<T> visitor) {
        return value.visit(visitor);
    }

    public static StreamedChatResponseV2 messageStart(ChatMessageStartEvent value) {
        return new StreamedChatResponseV2(new MessageStartValue(value));
    }

    public static StreamedChatResponseV2 contentStart(ChatContentStartEvent value) {
        return new StreamedChatResponseV2(new ContentStartValue(value));
    }

    public static StreamedChatResponseV2 contentDelta(ChatContentDeltaEvent value) {
        return new StreamedChatResponseV2(new ContentDeltaValue(value));
    }

    public static StreamedChatResponseV2 contentEnd(ChatContentEndEvent value) {
        return new StreamedChatResponseV2(new ContentEndValue(value));
    }

    public static StreamedChatResponseV2 toolPlanDelta(ChatToolPlanDeltaEvent value) {
        return new StreamedChatResponseV2(new ToolPlanDeltaValue(value));
    }

    public static StreamedChatResponseV2 toolCallStart(ChatToolCallStartEvent value) {
        return new StreamedChatResponseV2(new ToolCallStartValue(value));
    }

    public static StreamedChatResponseV2 toolCallDelta(ChatToolCallDeltaEvent value) {
        return new StreamedChatResponseV2(new ToolCallDeltaValue(value));
    }

    public static StreamedChatResponseV2 toolCallEnd(ChatToolCallEndEvent value) {
        return new StreamedChatResponseV2(new ToolCallEndValue(value));
    }

    public static StreamedChatResponseV2 citationStart(CitationStartEvent value) {
        return new StreamedChatResponseV2(new CitationStartValue(value));
    }

    public static StreamedChatResponseV2 citationEnd(CitationEndEvent value) {
        return new StreamedChatResponseV2(new CitationEndValue(value));
    }

    public static StreamedChatResponseV2 messageEnd(ChatMessageEndEvent value) {
        return new StreamedChatResponseV2(new MessageEndValue(value));
    }

    public boolean isMessageStart() {
        return value instanceof MessageStartValue;
    }

    public boolean isContentStart() {
        return value instanceof ContentStartValue;
    }

    public boolean isContentDelta() {
        return value instanceof ContentDeltaValue;
    }

    public boolean isContentEnd() {
        return value instanceof ContentEndValue;
    }

    public boolean isToolPlanDelta() {
        return value instanceof ToolPlanDeltaValue;
    }

    public boolean isToolCallStart() {
        return value instanceof ToolCallStartValue;
    }

    public boolean isToolCallDelta() {
        return value instanceof ToolCallDeltaValue;
    }

    public boolean isToolCallEnd() {
        return value instanceof ToolCallEndValue;
    }

    public boolean isCitationStart() {
        return value instanceof CitationStartValue;
    }

    public boolean isCitationEnd() {
        return value instanceof CitationEndValue;
    }

    public boolean isMessageEnd() {
        return value instanceof MessageEndValue;
    }

    public boolean _isUnknown() {
        return value instanceof _UnknownValue;
    }

    public Optional<ChatMessageStartEvent> getMessageStart() {
        if (isMessageStart()) {
            return Optional.of(((MessageStartValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatContentStartEvent> getContentStart() {
        if (isContentStart()) {
            return Optional.of(((ContentStartValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatContentDeltaEvent> getContentDelta() {
        if (isContentDelta()) {
            return Optional.of(((ContentDeltaValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatContentEndEvent> getContentEnd() {
        if (isContentEnd()) {
            return Optional.of(((ContentEndValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatToolPlanDeltaEvent> getToolPlanDelta() {
        if (isToolPlanDelta()) {
            return Optional.of(((ToolPlanDeltaValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatToolCallStartEvent> getToolCallStart() {
        if (isToolCallStart()) {
            return Optional.of(((ToolCallStartValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatToolCallDeltaEvent> getToolCallDelta() {
        if (isToolCallDelta()) {
            return Optional.of(((ToolCallDeltaValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatToolCallEndEvent> getToolCallEnd() {
        if (isToolCallEnd()) {
            return Optional.of(((ToolCallEndValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<CitationStartEvent> getCitationStart() {
        if (isCitationStart()) {
            return Optional.of(((CitationStartValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<CitationEndEvent> getCitationEnd() {
        if (isCitationEnd()) {
            return Optional.of(((CitationEndValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<ChatMessageEndEvent> getMessageEnd() {
        if (isMessageEnd()) {
            return Optional.of(((MessageEndValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<Object> _getUnknown() {
        if (_isUnknown()) {
            return Optional.of(((_UnknownValue) value).value);
        }
        return Optional.empty();
    }

    @JsonValue
    private Value getValue() {
        return this.value;
    }

    public interface Visitor<T> {
        T visitMessageStart(ChatMessageStartEvent messageStart);

        T visitContentStart(ChatContentStartEvent contentStart);

        T visitContentDelta(ChatContentDeltaEvent contentDelta);

        T visitContentEnd(ChatContentEndEvent contentEnd);

        T visitToolPlanDelta(ChatToolPlanDeltaEvent toolPlanDelta);

        T visitToolCallStart(ChatToolCallStartEvent toolCallStart);

        T visitToolCallDelta(ChatToolCallDeltaEvent toolCallDelta);

        T visitToolCallEnd(ChatToolCallEndEvent toolCallEnd);

        T visitCitationStart(CitationStartEvent citationStart);

        T visitCitationEnd(CitationEndEvent citationEnd);

        T visitMessageEnd(ChatMessageEndEvent messageEnd);

        T _visitUnknown(Object unknownType);
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", visible = true, defaultImpl = _UnknownValue.class)
    @JsonSubTypes({
        @JsonSubTypes.Type(MessageStartValue.class),
        @JsonSubTypes.Type(ContentStartValue.class),
        @JsonSubTypes.Type(ContentDeltaValue.class),
        @JsonSubTypes.Type(ContentEndValue.class),
        @JsonSubTypes.Type(ToolPlanDeltaValue.class),
        @JsonSubTypes.Type(ToolCallStartValue.class),
        @JsonSubTypes.Type(ToolCallDeltaValue.class),
        @JsonSubTypes.Type(ToolCallEndValue.class),
        @JsonSubTypes.Type(CitationStartValue.class),
        @JsonSubTypes.Type(CitationEndValue.class),
        @JsonSubTypes.Type(MessageEndValue.class)
    })
    @JsonIgnoreProperties(ignoreUnknown = true)
    private interface Value {
        <T> T visit(Visitor<T> visitor);
    }

    @JsonTypeName("message-start")
    private static final class MessageStartValue implements Value {
        @JsonUnwrapped
        private ChatMessageStartEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private MessageStartValue() {}

        private MessageStartValue(ChatMessageStartEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitMessageStart(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof MessageStartValue && equalTo((MessageStartValue) other);
        }

        private boolean equalTo(MessageStartValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("content-start")
    private static final class ContentStartValue implements Value {
        @JsonUnwrapped
        private ChatContentStartEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ContentStartValue() {}

        private ContentStartValue(ChatContentStartEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitContentStart(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ContentStartValue && equalTo((ContentStartValue) other);
        }

        private boolean equalTo(ContentStartValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("content-delta")
    private static final class ContentDeltaValue implements Value {
        @JsonUnwrapped
        private ChatContentDeltaEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ContentDeltaValue() {}

        private ContentDeltaValue(ChatContentDeltaEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitContentDelta(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ContentDeltaValue && equalTo((ContentDeltaValue) other);
        }

        private boolean equalTo(ContentDeltaValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("content-end")
    private static final class ContentEndValue implements Value {
        @JsonUnwrapped
        private ChatContentEndEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ContentEndValue() {}

        private ContentEndValue(ChatContentEndEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitContentEnd(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ContentEndValue && equalTo((ContentEndValue) other);
        }

        private boolean equalTo(ContentEndValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("tool-plan-delta")
    private static final class ToolPlanDeltaValue implements Value {
        @JsonUnwrapped
        private ChatToolPlanDeltaEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ToolPlanDeltaValue() {}

        private ToolPlanDeltaValue(ChatToolPlanDeltaEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitToolPlanDelta(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ToolPlanDeltaValue && equalTo((ToolPlanDeltaValue) other);
        }

        private boolean equalTo(ToolPlanDeltaValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("tool-call-start")
    private static final class ToolCallStartValue implements Value {
        @JsonUnwrapped
        private ChatToolCallStartEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ToolCallStartValue() {}

        private ToolCallStartValue(ChatToolCallStartEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitToolCallStart(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ToolCallStartValue && equalTo((ToolCallStartValue) other);
        }

        private boolean equalTo(ToolCallStartValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("tool-call-delta")
    private static final class ToolCallDeltaValue implements Value {
        @JsonUnwrapped
        private ChatToolCallDeltaEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ToolCallDeltaValue() {}

        private ToolCallDeltaValue(ChatToolCallDeltaEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitToolCallDelta(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ToolCallDeltaValue && equalTo((ToolCallDeltaValue) other);
        }

        private boolean equalTo(ToolCallDeltaValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("tool-call-end")
    private static final class ToolCallEndValue implements Value {
        @JsonUnwrapped
        private ChatToolCallEndEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private ToolCallEndValue() {}

        private ToolCallEndValue(ChatToolCallEndEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitToolCallEnd(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof ToolCallEndValue && equalTo((ToolCallEndValue) other);
        }

        private boolean equalTo(ToolCallEndValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("citation-start")
    private static final class CitationStartValue implements Value {
        @JsonUnwrapped
        private CitationStartEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private CitationStartValue() {}

        private CitationStartValue(CitationStartEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitCitationStart(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof CitationStartValue && equalTo((CitationStartValue) other);
        }

        private boolean equalTo(CitationStartValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("citation-end")
    private static final class CitationEndValue implements Value {
        @JsonUnwrapped
        private CitationEndEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private CitationEndValue() {}

        private CitationEndValue(CitationEndEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitCitationEnd(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof CitationEndValue && equalTo((CitationEndValue) other);
        }

        private boolean equalTo(CitationEndValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("message-end")
    private static final class MessageEndValue implements Value {
        @JsonUnwrapped
        private ChatMessageEndEvent value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private MessageEndValue() {}

        private MessageEndValue(ChatMessageEndEvent value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitMessageEnd(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof MessageEndValue && equalTo((MessageEndValue) other);
        }

        private boolean equalTo(MessageEndValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "value: " + value + "}";
        }
    }

    private static final class _UnknownValue implements Value {
        private String type;

        @JsonValue
        private Object value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private _UnknownValue(@JsonProperty("value") Object value) {}

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor._visitUnknown(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof _UnknownValue && equalTo((_UnknownValue) other);
        }

        private boolean equalTo(_UnknownValue other) {
            return type.equals(other.type) && value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.type, this.value);
        }

        @java.lang.Override
        public String toString() {
            return "StreamedChatResponseV2{" + "type: " + type + ", value: " + value + "}";
        }
    }
}
