/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.cohere.api.types;

import com.cohere.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = GenerateStreamEndResponse.Builder.class)
public final class GenerateStreamEndResponse {
    private final String id;

    private final Optional<String> prompt;

    private final Optional<List<SingleGenerationInStream>> generations;

    private final Map<String, Object> additionalProperties;

    private GenerateStreamEndResponse(
            String id,
            Optional<String> prompt,
            Optional<List<SingleGenerationInStream>> generations,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.prompt = prompt;
        this.generations = generations;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("prompt")
    public Optional<String> getPrompt() {
        return prompt;
    }

    @JsonProperty("generations")
    public Optional<List<SingleGenerationInStream>> getGenerations() {
        return generations;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GenerateStreamEndResponse && equalTo((GenerateStreamEndResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GenerateStreamEndResponse other) {
        return id.equals(other.id) && prompt.equals(other.prompt) && generations.equals(other.generations);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.id, this.prompt, this.generations);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        _FinalStage id(String id);

        Builder from(GenerateStreamEndResponse other);
    }

    public interface _FinalStage {
        GenerateStreamEndResponse build();

        _FinalStage prompt(Optional<String> prompt);

        _FinalStage prompt(String prompt);

        _FinalStage generations(Optional<List<SingleGenerationInStream>> generations);

        _FinalStage generations(List<SingleGenerationInStream> generations);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, _FinalStage {
        private String id;

        private Optional<List<SingleGenerationInStream>> generations = Optional.empty();

        private Optional<String> prompt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(GenerateStreamEndResponse other) {
            id(other.getId());
            prompt(other.getPrompt());
            generations(other.getGenerations());
            return this;
        }

        @Override
        @JsonSetter("id")
        public _FinalStage id(String id) {
            this.id = id;
            return this;
        }

        @Override
        public _FinalStage generations(List<SingleGenerationInStream> generations) {
            this.generations = Optional.of(generations);
            return this;
        }

        @Override
        @JsonSetter(value = "generations", nulls = Nulls.SKIP)
        public _FinalStage generations(Optional<List<SingleGenerationInStream>> generations) {
            this.generations = generations;
            return this;
        }

        @Override
        public _FinalStage prompt(String prompt) {
            this.prompt = Optional.of(prompt);
            return this;
        }

        @Override
        @JsonSetter(value = "prompt", nulls = Nulls.SKIP)
        public _FinalStage prompt(Optional<String> prompt) {
            this.prompt = prompt;
            return this;
        }

        @Override
        public GenerateStreamEndResponse build() {
            return new GenerateStreamEndResponse(id, prompt, generations, additionalProperties);
        }
    }
}
