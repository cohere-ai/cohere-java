/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.cohere.api.types;

import com.cohere.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ChatRequestToolResultsItem.Builder.class)
public final class ChatRequestToolResultsItem {
    private final ToolCall call;

    private final List<Map<String, Object>> outputs;

    private final Map<String, Object> additionalProperties;

    private ChatRequestToolResultsItem(
            ToolCall call, List<Map<String, Object>> outputs, Map<String, Object> additionalProperties) {
        this.call = call;
        this.outputs = outputs;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("call")
    public ToolCall getCall() {
        return call;
    }

    @JsonProperty("outputs")
    public List<Map<String, Object>> getOutputs() {
        return outputs;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ChatRequestToolResultsItem && equalTo((ChatRequestToolResultsItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ChatRequestToolResultsItem other) {
        return call.equals(other.call) && outputs.equals(other.outputs);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.call, this.outputs);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CallStage builder() {
        return new Builder();
    }

    public interface CallStage {
        _FinalStage call(ToolCall call);

        Builder from(ChatRequestToolResultsItem other);
    }

    public interface _FinalStage {
        ChatRequestToolResultsItem build();

        _FinalStage outputs(List<Map<String, Object>> outputs);

        _FinalStage addOutputs(Map<String, Object> outputs);

        _FinalStage addAllOutputs(List<Map<String, Object>> outputs);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CallStage, _FinalStage {
        private ToolCall call;

        private List<Map<String, Object>> outputs = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ChatRequestToolResultsItem other) {
            call(other.getCall());
            outputs(other.getOutputs());
            return this;
        }

        @java.lang.Override
        @JsonSetter("call")
        public _FinalStage call(ToolCall call) {
            this.call = call;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllOutputs(List<Map<String, Object>> outputs) {
            this.outputs.addAll(outputs);
            return this;
        }

        @java.lang.Override
        public _FinalStage addOutputs(Map<String, Object> outputs) {
            this.outputs.add(outputs);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "outputs", nulls = Nulls.SKIP)
        public _FinalStage outputs(List<Map<String, Object>> outputs) {
            this.outputs.clear();
            this.outputs.addAll(outputs);
            return this;
        }

        @java.lang.Override
        public ChatRequestToolResultsItem build() {
            return new ChatRequestToolResultsItem(call, outputs, additionalProperties);
        }
    }
}
