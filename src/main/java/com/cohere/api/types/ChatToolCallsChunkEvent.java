/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.cohere.api.types;

import com.cohere.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ChatToolCallsChunkEvent.Builder.class)
public final class ChatToolCallsChunkEvent implements IChatStreamEvent {
    private final ToolCallDelta toolCallDelta;

    private final Map<String, Object> additionalProperties;

    private ChatToolCallsChunkEvent(ToolCallDelta toolCallDelta, Map<String, Object> additionalProperties) {
        this.toolCallDelta = toolCallDelta;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("tool_call_delta")
    public ToolCallDelta getToolCallDelta() {
        return toolCallDelta;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ChatToolCallsChunkEvent && equalTo((ChatToolCallsChunkEvent) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ChatToolCallsChunkEvent other) {
        return toolCallDelta.equals(other.toolCallDelta);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.toolCallDelta);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ToolCallDeltaStage builder() {
        return new Builder();
    }

    public interface ToolCallDeltaStage {
        _FinalStage toolCallDelta(ToolCallDelta toolCallDelta);

        Builder from(ChatToolCallsChunkEvent other);
    }

    public interface _FinalStage {
        ChatToolCallsChunkEvent build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ToolCallDeltaStage, _FinalStage {
        private ToolCallDelta toolCallDelta;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ChatToolCallsChunkEvent other) {
            toolCallDelta(other.getToolCallDelta());
            return this;
        }

        @java.lang.Override
        @JsonSetter("tool_call_delta")
        public _FinalStage toolCallDelta(ToolCallDelta toolCallDelta) {
            this.toolCallDelta = toolCallDelta;
            return this;
        }

        @java.lang.Override
        public ChatToolCallsChunkEvent build() {
            return new ChatToolCallsChunkEvent(toolCallDelta, additionalProperties);
        }
    }
}
