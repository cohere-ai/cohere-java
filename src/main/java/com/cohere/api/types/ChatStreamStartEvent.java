/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.cohere.api.types;

import com.cohere.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ChatStreamStartEvent.Builder.class)
public final class ChatStreamStartEvent implements IChatStreamEvent {
    private final String generationId;

    private final Map<String, Object> additionalProperties;

    private ChatStreamStartEvent(String generationId, Map<String, Object> additionalProperties) {
        this.generationId = generationId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Unique identifier for the generated reply. Useful for submitting feedback.
     */
    @JsonProperty("generation_id")
    public String getGenerationId() {
        return generationId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ChatStreamStartEvent && equalTo((ChatStreamStartEvent) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ChatStreamStartEvent other) {
        return generationId.equals(other.generationId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.generationId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static GenerationIdStage builder() {
        return new Builder();
    }

    public interface GenerationIdStage {
        _FinalStage generationId(@NotNull String generationId);

        Builder from(ChatStreamStartEvent other);
    }

    public interface _FinalStage {
        ChatStreamStartEvent build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements GenerationIdStage, _FinalStage {
        private String generationId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ChatStreamStartEvent other) {
            generationId(other.getGenerationId());
            return this;
        }

        /**
         * <p>Unique identifier for the generated reply. Useful for submitting feedback.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("generation_id")
        public _FinalStage generationId(@NotNull String generationId) {
            this.generationId = Objects.requireNonNull(generationId, "generationId must not be null");
            return this;
        }

        @java.lang.Override
        public ChatStreamStartEvent build() {
            return new ChatStreamStartEvent(generationId, additionalProperties);
        }
    }
}
