/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.cohere.api.resources.models;

import com.cohere.api.core.ClientOptions;
import com.cohere.api.core.RequestOptions;
import com.cohere.api.resources.models.requests.ModelsListRequest;
import com.cohere.api.types.GetModelResponse;
import com.cohere.api.types.ListModelsResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncModelsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawModelsClient rawClient;

    public AsyncModelsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawModelsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawModelsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns the details of a model, provided its name.
     */
    public CompletableFuture<GetModelResponse> get(String model) {
        return this.rawClient.get(model).thenApply(response -> response.body());
    }

    /**
     * Returns the details of a model, provided its name.
     */
    public CompletableFuture<GetModelResponse> get(String model, RequestOptions requestOptions) {
        return this.rawClient.get(model, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of models available for use. The list contains models from Cohere as well as your fine-tuned models.
     */
    public CompletableFuture<ListModelsResponse> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    /**
     * Returns a list of models available for use. The list contains models from Cohere as well as your fine-tuned models.
     */
    public CompletableFuture<ListModelsResponse> list(ModelsListRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of models available for use. The list contains models from Cohere as well as your fine-tuned models.
     */
    public CompletableFuture<ListModelsResponse> list(ModelsListRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }
}
